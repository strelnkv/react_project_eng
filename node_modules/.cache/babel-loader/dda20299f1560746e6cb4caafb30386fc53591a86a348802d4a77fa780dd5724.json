{"ast":null,"code":"var _jsxFileName = \"/Users/mariastrelnikova/Code/react_project_eng/src/components/Main/Table.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TableLine from \"./TableLine\";\nimport { useState, useContext } from \"react\";\n// import data from \"../../../src/words.json\";\nimport { WordsContext } from \"../App/Words\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  _s();\n  const {\n    words,\n    updateWord,\n    deleteWord,\n    addWord\n  } = useContext(WordsContext);\n  const [isClosed, setClosed] = useState(true);\n  const [ruValue, setRuValue] = useState(\"\");\n  const [trValue, setTrValue] = useState(\"\");\n  const [engValue, setEngValue] = useState(\"\");\n  function addNewWord() {\n    const newWord = {\n      english: engValue,\n      russian: ruValue,\n      transcription: trValue\n    };\n    addWord(newWord);\n    setRuValue(\"\");\n    setTrValue(\"\");\n    setEngValue(\"\");\n    setClosed(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new_word\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setClosed(!isClosed),\n        children: \"Add new word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Russian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: isClosed ? \"disabled\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: engValue,\n              type: \"text\",\n              placeholder: \"add english word\",\n              onChange: e => setEngValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: trValue,\n              type: \"text\",\n              placeholder: \"add transcription\",\n              onChange: e => setTrValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: ruValue,\n              type: \"text\",\n              placeholder: \"add russian word\",\n              onChange: e => setRuValue(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: addNewWord,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), words.slice().reverse().map(word => /*#__PURE__*/_jsxDEV(TableLine, {\n          word: word,\n          onChange: updateWord,\n          onDelete: deleteWord\n        }, word.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"/DD4AzVt6LKOzKA2IFZFoCzt8yI=\");\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","TableLine","useState","useContext","WordsContext","jsxDEV","_jsxDEV","Table","_s","words","updateWord","deleteWord","addWord","isClosed","setClosed","ruValue","setRuValue","trValue","setTrValue","engValue","setEngValue","addNewWord","newWord","english","russian","transcription","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","type","placeholder","onChange","e","target","slice","reverse","map","word","onDelete","id","_c","$RefreshReg$"],"sources":["/Users/mariastrelnikova/Code/react_project_eng/src/components/Main/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport TableLine from \"./TableLine\";\nimport { useState, useContext } from \"react\";\n// import data from \"../../../src/words.json\";\nimport { WordsContext } from \"../App/Words\";\n\nexport default function Table() {\n  const { words, updateWord, deleteWord, addWord } = useContext(WordsContext);\n\n  const [isClosed, setClosed] = useState(true);\n\n  const [ruValue, setRuValue] = useState(\"\");\n  const [trValue, setTrValue] = useState(\"\");\n  const [engValue, setEngValue] = useState(\"\");\n\n  function addNewWord() {\n    const newWord = {\n      english: engValue,\n      russian: ruValue,\n      transcription: trValue,\n    };\n\n    addWord(newWord);\n\n    setRuValue(\"\");\n    setTrValue(\"\");\n    setEngValue(\"\");\n\n    setClosed(true);\n  }\n\n  return (\n    <div className=\"table container\">\n      <div className=\"new_word\">\n        <button onClick={() => setClosed(!isClosed)}>Add new word</button>\n      </div>\n\n      <table>\n        <thead>\n          <tr>\n            <th>English</th>\n            <th>Transcription</th>\n            <th>Russian</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr className={isClosed ? \"disabled\" : \"\"}>\n            <td>\n              <input\n                value={engValue}\n                type=\"text\"\n                placeholder=\"add english word\"\n                onChange={(e) => setEngValue(e.target.value)}\n              />\n            </td>\n            <td>\n              <input\n                value={trValue}\n                type=\"text\"\n                placeholder=\"add transcription\"\n                onChange={(e) => setTrValue(e.target.value)}\n              />\n            </td>\n            <td>\n              <input\n                value={ruValue}\n                type=\"text\"\n                placeholder=\"add russian word\"\n                onChange={(e) => setRuValue(e.target.value)}\n              />\n            </td>\n            <td>\n              <button onClick={addNewWord}>Save</button>\n            </td>\n          </tr>\n          {words\n            .slice()\n            .reverse()\n            .map((word) => (\n              <TableLine\n                key={word.id}\n                word={word}\n                onChange={updateWord}\n                onDelete={deleteWord}\n              />\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}