{"ast":null,"code":"var _jsxFileName = \"/Users/mariastrelnikova/Code/react_project_eng/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\nimport \"../../style/App.scss\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Table from \"../Main/Table\";\nimport Footer from \"../Footer/Footer\";\nimport data from \"../../words.json\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n/*\n{\n  id: 1\n  english: 'helo'\n  russian: 'privet'\n}\n\n{\n  id: 1\n  english: 'hello'\n  russian: 'privet'\n}\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [words, setWords] = useState(data.words);\n  const handleWordChange = editedWord => {\n    setWords(words.map(word => {\n      if (word.id === editedWord.id) {\n        return editedWord;\n      } else {\n        return word;\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      arrWords: words\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"English\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transcription\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Russian\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), words.map(word => /*#__PURE__*/_jsxDEV(Table, {\n          word: word,\n          onChange: handleWordChange,\n          onDelete: wordId => {\n            setWords(words.filter(word => word.id !== wordId));\n          }\n        }, word.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), \";\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TN6GO2lqq/x3/VDpRFhSwhCt/28=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Table","Footer","data","useState","BrowserRouter","Router","jsxDEV","_jsxDEV","App","_s","words","setWords","handleWordChange","editedWord","map","word","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","arrWords","onChange","onDelete","wordId","filter","_c","$RefreshReg$"],"sources":["/Users/mariastrelnikova/Code/react_project_eng/src/components/App/App.jsx"],"sourcesContent":["import \"../../style/App.scss\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport Table from \"../Main/Table\";\nimport Footer from \"../Footer/Footer\";\nimport data from \"../../words.json\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n/*\n{\n  id: 1\n  english: 'helo'\n  russian: 'privet'\n}\n\n{\n  id: 1\n  english: 'hello'\n  russian: 'privet'\n}\n*/\n\nfunction App() {\n  const [words, setWords] = useState(data.words);\n\n  const handleWordChange = (editedWord) => {\n    setWords(\n      words.map((word) => {\n        if (word.id === editedWord.id) {\n          return editedWord;\n        } else {\n          return word;\n        }\n      })\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main arrWords={words}></Main>\n      <div className=\"table container\">\n        <table>\n          <thead>\n            <tr>\n              <th>English</th>\n              <th>Transcription</th>\n              <th>Russian</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          {words.map((word) => (\n            <Table\n              key={word.id}\n              word={word}\n              onChange={handleWordChange}\n              onDelete={(wordId) => {\n                setWords(words.filter((word) => word.id !== wordId));\n              }}\n            />\n          ))}\n        </table>\n      </div>\n      ;\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}