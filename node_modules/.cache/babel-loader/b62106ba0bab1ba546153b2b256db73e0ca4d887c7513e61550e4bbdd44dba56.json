{"ast":null,"code":"import _slicedToArray from\"/Users/mariastrelnikova/Code/react_project_eng/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from\"react\";import TableLine from\"./TableLine\";import{useState}from\"react\";import data from\"../../../src/words.json\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Table(){var _useState=useState(data.words),_useState2=_slicedToArray(_useState,2),words=_useState2[0],setWords=_useState2[1];var handleWordChange=function handleWordChange(editedWord){setWords(words.map(function(word){if(word.id===editedWord.id){return editedWord;}else{return word;}}));};return/*#__PURE__*/_jsx(\"div\",{className:\"table container\",children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"English\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Transcription\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Russian\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:words.map(function(word){return/*#__PURE__*/_jsx(TableLine,{word:word,onChange:handleWordChange,onDelete:function onDelete(wordId){setWords(words.filter(function(word){return word.id!==wordId;}));}},word.id);})})]})});}","map":{"version":3,"names":["React","TableLine","useState","data","jsx","_jsx","jsxs","_jsxs","Table","_useState","words","_useState2","_slicedToArray","setWords","handleWordChange","editedWord","map","word","id","className","children","onChange","onDelete","wordId","filter"],"sources":["/Users/mariastrelnikova/Code/react_project_eng/src/components/Main/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport TableLine from \"./TableLine\";\nimport { useState } from \"react\";\nimport data from \"../../../src/words.json\";\n\nexport default function Table() {\n  const [words, setWords] = useState(data.words);\n\n  const handleWordChange = (editedWord) => {\n    setWords(\n      words.map((word) => {\n        if (word.id === editedWord.id) {\n          return editedWord;\n        } else {\n          return word;\n        }\n      })\n    );\n  };\n  return (\n    <div className=\"table container\">\n      <table>\n        <thead>\n          <tr>\n            <th>English</th>\n            <th>Transcription</th>\n            <th>Russian</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {words.map((word) => (\n            <TableLine\n              key={word.id}\n              word={word}\n              onChange={handleWordChange}\n              onDelete={(wordId) => {\n                setWords(words.filter((word) => word.id !== wordId));\n              }}\n            />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n"],"mappings":"oIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,SAAS,KAAM,aAAa,CACnC,OAASC,QAAQ,KAAQ,OAAO,CAChC,MAAO,CAAAC,IAAI,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE3C,cAAe,SAAS,CAAAC,KAAKA,CAAA,CAAG,CAC9B,IAAAC,SAAA,CAA0BP,QAAQ,CAACC,IAAI,CAACO,KAAK,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAH,SAAA,IAAvCC,KAAK,CAAAC,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB,GAAM,CAAAG,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,UAAU,CAAK,CACvCF,QAAQ,CACNH,KAAK,CAACM,GAAG,CAAC,SAACC,IAAI,CAAK,CAClB,GAAIA,IAAI,CAACC,EAAE,GAAKH,UAAU,CAACG,EAAE,CAAE,CAC7B,MAAO,CAAAH,UAAU,CACnB,CAAC,IAAM,CACL,MAAO,CAAAE,IAAI,CACb,CACF,CAAC,CACH,CAAC,CACH,CAAC,CACD,mBACEZ,IAAA,QAAKc,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9Bb,KAAA,UAAAa,QAAA,eACEf,IAAA,UAAAe,QAAA,cACEb,KAAA,OAAAa,QAAA,eACEf,IAAA,OAAAe,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBf,IAAA,OAAAe,QAAA,CAAI,eAAa,CAAI,CAAC,cACtBf,IAAA,OAAAe,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBf,IAAA,OAAAe,QAAA,CAAI,SAAO,CAAI,CAAC,EACd,CAAC,CACA,CAAC,cACRf,IAAA,UAAAe,QAAA,CACGV,KAAK,CAACM,GAAG,CAAC,SAACC,IAAI,qBACdZ,IAAA,CAACJ,SAAS,EAERgB,IAAI,CAAEA,IAAK,CACXI,QAAQ,CAAEP,gBAAiB,CAC3BQ,QAAQ,CAAE,SAAAA,SAACC,MAAM,CAAK,CACpBV,QAAQ,CAACH,KAAK,CAACc,MAAM,CAAC,SAACP,IAAI,QAAK,CAAAA,IAAI,CAACC,EAAE,GAAKK,MAAM,GAAC,CAAC,CACtD,CAAE,EALGN,IAAI,CAACC,EAMX,CAAC,EACH,CAAC,CACG,CAAC,EACH,CAAC,CACL,CAAC,CAEV"},"metadata":{},"sourceType":"module","externalDependencies":[]}