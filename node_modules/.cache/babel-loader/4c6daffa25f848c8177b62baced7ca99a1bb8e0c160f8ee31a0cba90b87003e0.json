{"ast":null,"code":"var _jsxFileName = \"/Users/mariastrelnikova/Code/react_project_eng/src/components/Main/Table.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TableLine from \"./TableLine\";\nimport { useState } from \"react\";\nimport data from \"../../../src/words.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table() {\n  _s();\n  const [words, setWords] = useState(data.words);\n  const handleWordChange = editedWord => {\n    setWords(words.map(word => {\n      if (word.id === editedWord.id) {\n        return editedWord;\n      } else {\n        return word;\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Transcription\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Russian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), words.map(word => /*#__PURE__*/_jsxDEV(TableLine, {\n        word: word,\n        onChange: handleWordChange,\n        onDelete: wordId => {\n          setWords(words.filter(word => word.id !== wordId));\n        }\n      }, word.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"TN6GO2lqq/x3/VDpRFhSwhCt/28=\");\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","TableLine","useState","data","jsxDEV","_jsxDEV","Table","_s","words","setWords","handleWordChange","editedWord","map","word","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onDelete","wordId","filter","_c","$RefreshReg$"],"sources":["/Users/mariastrelnikova/Code/react_project_eng/src/components/Main/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport TableLine from \"./TableLine\";\nimport { useState } from \"react\";\nimport data from \"../../../src/words.json\";\n\nexport default function Table() {\n  const [words, setWords] = useState(data.words);\n\n  const handleWordChange = (editedWord) => {\n    setWords(\n      words.map((word) => {\n        if (word.id === editedWord.id) {\n          return editedWord;\n        } else {\n          return word;\n        }\n      })\n    );\n  };\n  return (\n    <div className=\"table container\">\n      <table>\n        <thead>\n          <tr>\n            <th>English</th>\n            <th>Transcription</th>\n            <th>Russian</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        {words.map((word) => (\n          <TableLine\n            key={word.id}\n            word={word}\n            onChange={handleWordChange}\n            onDelete={(wordId) => {\n              setWords(words.filter((word) => word.id !== wordId));\n            }}\n          />\n        ))}\n      </table>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAACC,IAAI,CAACK,KAAK,CAAC;EAE9C,MAAME,gBAAgB,GAAIC,UAAU,IAAK;IACvCF,QAAQ,CACND,KAAK,CAACI,GAAG,CAAEC,IAAI,IAAK;MAClB,IAAIA,IAAI,CAACC,EAAE,KAAKH,UAAU,CAACG,EAAE,EAAE;QAC7B,OAAOH,UAAU;MACnB,CAAC,MAAM;QACL,OAAOE,IAAI;MACb;IACF,CAAC,CACH,CAAC;EACH,CAAC;EACD,oBACER,OAAA;IAAKU,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BX,OAAA;MAAAW,QAAA,gBACEX,OAAA;QAAAW,QAAA,eACEX,OAAA;UAAAW,QAAA,gBACEX,OAAA;YAAAW,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBf,OAAA;YAAAW,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBf,OAAA;YAAAW,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChBf,OAAA;YAAAW,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EACPZ,KAAK,CAACI,GAAG,CAAEC,IAAI,iBACdR,OAAA,CAACJ,SAAS;QAERY,IAAI,EAAEA,IAAK;QACXQ,QAAQ,EAAEX,gBAAiB;QAC3BY,QAAQ,EAAGC,MAAM,IAAK;UACpBd,QAAQ,CAACD,KAAK,CAACgB,MAAM,CAAEX,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKS,MAAM,CAAC,CAAC;QACtD;MAAE,GALGV,IAAI,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMb,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACb,EAAA,CAtCuBD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}