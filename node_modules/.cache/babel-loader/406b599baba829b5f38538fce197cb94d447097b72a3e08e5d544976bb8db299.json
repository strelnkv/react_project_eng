{"ast":null,"code":"var _jsxFileName = \"/Users/mariastrelnikova/Code/react_project_eng/src/components/Main/Table.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../../style/Table.scss\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Table(props) {\n  _s();\n  const [engWord, setEngWord] = useState(props.english);\n  const [ruWord, setRuWord] = useState(props.russian);\n  const [words, setWords] = useState(props);\n  const [inputState, setInputState] = useState(\"disabled\");\n  const [pState, setpState] = useState(\"enabled\");\n  const [inputValue, setInputValue] = useState(engWord);\n  console.log(\"engword\");\n  function edit() {\n    setInputState(inputState === \"disabled\" ? \"enabled\" : \"disabled\");\n    setpState(pState === \"enabled\" ? \"disabled\" : \"enabled\");\n  }\n  function editEngWord() {\n    setEngWord(inputValue);\n    setInputState(inputState === \"disabled\" ? \"enabled\" : \"disabled\");\n    setpState(pState === \"enabled\" ? \"disabled\" : \"enabled\");\n    arrWords.map(word => word.english === engWord ? word.english = inputValue : engWord);\n  }\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: e => setInputValue(e.target.value),\n          className: inputState,\n          value: inputValue,\n          type: \"text\",\n          placeholder: engWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: inputState,\n          onClick: editEngWord,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: pState,\n          id: props.id,\n          children: [\" \", engWord]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: props.transcription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        children: ruWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"tableBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: edit,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Table, \"lgejcTBiGg2GIMBchegTJeF6vNQ=\");\n_c = Table;\nvar _c;\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Table","props","_s","engWord","setEngWord","english","ruWord","setRuWord","russian","words","setWords","inputState","setInputState","pState","setpState","inputValue","setInputValue","console","log","edit","editEngWord","arrWords","map","word","children","onChange","e","target","value","className","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","id","transcription","_c","$RefreshReg$"],"sources":["/Users/mariastrelnikova/Code/react_project_eng/src/components/Main/Table.jsx"],"sourcesContent":["import React from \"react\";\nimport \"../../style/Table.scss\";\nimport { useState } from \"react\";\n\nexport default function Table(props) {\n  const [engWord, setEngWord] = useState(props.english);\n  const [ruWord, setRuWord] = useState(props.russian);\n  const [words, setWords] = useState(props);\n  const [inputState, setInputState] = useState(\"disabled\");\n  const [pState, setpState] = useState(\"enabled\");\n  const [inputValue, setInputValue] = useState(engWord);\n\n  console.log(\"engword\");\n\n  function edit() {\n    setInputState(inputState === \"disabled\" ? \"enabled\" : \"disabled\");\n    setpState(pState === \"enabled\" ? \"disabled\" : \"enabled\");\n  }\n\n  function editEngWord() {\n    setEngWord(inputValue);\n\n    setInputState(inputState === \"disabled\" ? \"enabled\" : \"disabled\");\n    setpState(pState === \"enabled\" ? \"disabled\" : \"enabled\");\n\n    arrWords.map((word) =>\n      word.english === engWord ? (word.english = inputValue) : engWord\n    );\n  }\n\n  return (\n    <tbody>\n      <tr>\n        <td>\n          <input\n            onChange={(e) => setInputValue(e.target.value)}\n            className={inputState}\n            value={inputValue}\n            type=\"text\"\n            placeholder={engWord}\n          />\n          <button className={inputState} onClick={editEngWord}>\n            Save\n          </button>\n          <span className={pState} id={props.id}>\n            {\" \"}\n            {engWord}\n          </span>\n        </td>\n        <td>{props.transcription}</td>\n        <td>{ruWord}</td>\n        <td className=\"tableBtn\">\n          <button onClick={edit}>Edit</button>\n          <button>Delete</button>\n        </td>\n      </tr>\n    </tbody>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}