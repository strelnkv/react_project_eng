{"ast":null,"code":"var _jsxFileName = \"/Users/mariastrelnikova/Code/react_project_eng/src/components/App/App.jsx\",\n  _s = $RefreshSig$();\nimport \"../../style/App.scss\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport TableLine from \"../Main/TableLine\";\nimport Footer from \"../Footer/Footer\";\nimport data from \"../../words.json\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n/*\n{\n  id: 1\n  english: 'helo'\n  russian: 'privet'\n}\n\n{\n  id: 1\n  english: 'hello'\n  russian: 'privet'\n}\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [words, setWords] = useState(data.words);\n  const handleWordChange = editedWord => {\n    setWords(words.map(word => {\n      if (word.id === editedWord.id) {\n        return editedWord;\n      } else {\n        return word;\n      }\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        arrWords: words\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"table container\",\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"English\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Transcription\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Russian\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), words.map(word => /*#__PURE__*/_jsxDEV(TableLine, {\n              word: word,\n              onChange: handleWordChange,\n              onDelete: wordId => {\n                setWords(words.filter(word => word.id !== wordId));\n              }\n            }, word.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TN6GO2lqq/x3/VDpRFhSwhCt/28=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","TableLine","Footer","data","useState","BrowserRouter","Router","Routes","Route","jsxDEV","_jsxDEV","App","_s","words","setWords","handleWordChange","editedWord","map","word","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","arrWords","Table","onChange","onDelete","wordId","filter","_c","$RefreshReg$"],"sources":["/Users/mariastrelnikova/Code/react_project_eng/src/components/App/App.jsx"],"sourcesContent":["import \"../../style/App.scss\";\nimport Header from \"../Header/Header\";\nimport Main from \"../Main/Main\";\nimport TableLine from \"../Main/TableLine\";\nimport Footer from \"../Footer/Footer\";\nimport data from \"../../words.json\";\nimport { useState } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n/*\n{\n  id: 1\n  english: 'helo'\n  russian: 'privet'\n}\n\n{\n  id: 1\n  english: 'hello'\n  russian: 'privet'\n}\n*/\n\nfunction App() {\n  const [words, setWords] = useState(data.words);\n\n  const handleWordChange = (editedWord) => {\n    setWords(\n      words.map((word) => {\n        if (word.id === editedWord.id) {\n          return editedWord;\n        } else {\n          return word;\n        }\n      })\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Main arrWords={words}></Main>\n        <Table>\n          <div className=\"table container\">\n            <table>\n              <thead>\n                <tr>\n                  <th>English</th>\n                  <th>Transcription</th>\n                  <th>Russian</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              {words.map((word) => (\n                <TableLine\n                  key={word.id}\n                  word={word}\n                  onChange={handleWordChange}\n                  onDelete={(wordId) => {\n                    setWords(words.filter((word) => word.id !== wordId));\n                  }}\n                />\n              ))}\n            </table>\n          </div>\n        </Table>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}